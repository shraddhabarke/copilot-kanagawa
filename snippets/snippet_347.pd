//| Return the smaller of x and y.
import data.bits
import data.optional
import numeric.fixed.internal as internal
import numeric.int.operator as intop

//| Fixed-point representation.
template<auto I /*< Integer bit-width.*/, auto F /*< Fractional bit-width.*/>
struct fixed
{
    int<I + F> value;
}

template<auto I, auto F>
inline fixed<I, F> min(fixed<I, F> x, fixed<I, F> y)
{
    return y.value < x.value ? y : x;
}

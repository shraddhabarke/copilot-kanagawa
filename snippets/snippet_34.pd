
import .options as opt
import data.array as A
import data.function
import data.optional as Opt
import data.order as Ord
import data.tuple as P
import sync.atomic
import numeric.int.operator
import numeric.int.operator.unsigned as unsigned
import type.stdtype
import data.vector as V

template <typename T, auto N /*< Maximum size.*/>
struct vector
{
    T[N] data;
    count_t<N> size;
}

template <typename S, auto N, typename T, auto M>
inline auto zip(vector<S, N> s, vector<T, M> t)
{
    return zip_with(P::make_pair<S, T>, s, t);
}

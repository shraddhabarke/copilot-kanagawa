import type.coerce
import type.stdtype

//| A thread-safe counter that can be incremented in one location and decremented in another.
template
    < auto Maximum //< The maximum count value.
    , auto Initial = 0 //< The initial value of the counter.
    >
class counter
{
public:
    using ctr_t = count_t<Maximum>;

private:
    ctr_t _first = Initial;
    ctr_t _second = 0;

public:

    inline void add(ctr_t amount) {
    atomic {
        _first = modular::add(_first, amount);
    }
    }
}

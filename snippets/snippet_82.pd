//| Return array `bool[N]` with element at i the result of i < arg.
//
// #### __Example__
//
//     >>> mask_less_than<4>(2);
//     {0x1, 0x1, 0x0, 0x0}

template <auto N, typename T>
inline bool[N] mask_greater_equal(T arg)
{
    sim_assert(arg <= N);
    return reinterpret_cast<bool[N]>(static((1 << N) - 1) << arg);
}

template <auto N, typename T> 
inline bool[N] mask_less_than(T arg) { 
    sim_assert(arg <= N); 
    auto ret = mask_greater_equal<N>(arg); 
    static for(const auto i : N) 
	ret[i] = !ret[i]; 
	return ret; }

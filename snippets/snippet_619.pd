import data.tuple
import type.stdtype

template
    < typename T            //< Type of the internal state
    , T InitialValue = {}   //< Initial value
    >
inline pair<T, T> atomically((T) -> T modify)
{
    pair<T, T> result;

    atomic
    {
        static T state = InitialValue;

        result = {state, modify(state)};
        state = result.second;
    }

    return result;
}

bool check()
    {
        return first(atomically(constant(true)));
    }

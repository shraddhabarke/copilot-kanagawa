inline pair<bool, uint<Width>> init_generational(bool reset)
{
    using generation_id_t = uint<Width>;

    pair<bool, uint<Width>> result;

    result.second = second(atomically([reset](generation_id_t prev)
    {
        const generation_id_t highest_id = (1 << Width) - 1;

        // reset must be true on the first call to this function
        // That is the only time when prev will be 0
        sim_assert(reset || (prev != 0));

        generation_id_t new = prev;

        if (reset)
        {
            // Never return 0, skip from highest_id to 1
            new = (prev == highest_id) ? 1 : prev + 1;
        }

        return new;
    }));

    // Initialization to 0 is required when reset is true
    // and the new generation is 1.
    // This occurs when either wrapping from highest_id
    // or when incrementing from the default value of 0
    result.first = reset && (result.second == 1);

    return result;
}
 (Key key, optional<Word>[WordCount] data) -> void store;
 const auto SetCount = Depth / Associativity;
 // An integer that represents a single set of `Associativity` values in the cache.
 using set_index_t = index_t<SetCount>;cache_tags<Key, LUtime, Associativity, Depth> _tags;

    pipelined_memory<optional<Word>[WordCount], Depth, Banks, memory_norep> _data;

    inline index_t<Depth> get_data_index(set_index_t set_index, index_t<Associativity> way_index)
    {
        return (set_index * Associativity) + way_index;
    }
import data.array

//| All fields are 0-based
// Year = 1995 means the year of Windows 95
// Day = 0 means the first day of the month
struct time_t
{
    uint6 seconds;
    uint6 minutes;
    uint5 hours;
    uint5 day;
    uint4 month;
    uint12 year;
}


//| `time_t` with day as smallest element
struct time_day_t
{
    uint5 day;
    uint4 month;
    uint12 year;
}


// Mapping of (month index, is leap year) -> cummulative days from the start of the month to the start of the year
// Each row is 16 entries long (last 4 are unused)
const memory<uint9, 32> cummulative_month_days_table =
{
    0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 0, 0, 0, 0,
    0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 0, 0, 0, 0
};


// Mapping of (month index, is leap year) -> days in each month
// Each row is 16 entries long (last 4 are unused)
const memory<uint5, 32> days_per_month_table =
{
    31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 0, 0, 0, 0,
    31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 0, 0, 0, 0
};


//| Enough bits to represent the number of seconds since Jan 1 1970
// for all years covered by epoch related functions
using epoch_seconds_t = uint36;
//| Enough bits to represent the number of days since Jan 1 1970
// for all years covered by epoch related functions
using epoch_days_t = uint19;

const auto year_tables_start_year = 1970;
const auto year_tables_end_year = 2994;
const memory<uint20, 1024> cummulative_year_days_table =
{
0, 365, 730, 1096, 1461, 1826, 2191, 2557, 2922, 3287, 3652, 4018, 4383, 4748, 5113, 5479,
5844, 6209, 6574, 6940, 7305, 7670, 8035, 8401, 8766, 9131, 9496, 9862, 10227, 10592, 10957, 11323,
11688, 12053, 12418, 12784, 13149, 13514, 13879, 14245, 14610, 14975, 15340, 15706, 16071, 16436, 16801, 17167,
17532, 17897, 18262, 18628, 18993, 19358, 19723, 20089, 20454, 20819, 21184, 21550, 21915, 22280, 22645, 23011,
23376, 23741, 24106, 24472, 24837, 25202, 25567, 25933, 26298, 26663, 27028, 27394, 27759, 28124, 28489, 28855,
29220, 29585, 29950, 30316, 30681, 31046, 31411, 31777, 32142, 32507, 32872, 33238, 33603, 33968, 34333, 34699,
35064, 35429, 35794, 36160, 36525, 36890, 37255, 37621, 37986, 38351, 38716, 39082, 39447, 39812, 40177, 40543,
40908, 41273, 41638, 42004, 42369, 42734, 43099, 43465, 43830, 44195, 44560, 44926, 45291, 45656, 46021, 46387,
46752, 47117, 47482, 47847, 48212, 48577, 48942, 49308, 49673, 50038, 50403, 50769, 51134, 51499, 51864, 52230,
52595, 52960, 53325, 53691, 54056, 54421, 54786, 55152, 55517, 55882, 56247, 56613, 56978, 57343, 57708, 58074,
58439, 58804, 59169, 59535, 59900, 60265, 60630, 60996, 61361, 61726, 62091, 62457, 62822, 63187, 63552, 63918,
64283, 64648, 65013, 65379, 65744, 66109, 66474, 66840, 67205, 67570, 67935, 68301, 68666, 69031, 69396, 69762,
70127, 70492, 70857, 71223, 71588, 71953, 72318, 72684, 73049, 73414, 73779, 74145, 74510, 74875, 75240, 75606,
75971, 76336, 76701, 77067, 77432, 77797, 78162, 78528, 78893, 79258, 79623, 79989, 80354, 80719, 81084, 81450,
81815, 82180, 82545, 82911, 83276, 83641, 84006, 84371, 84736, 85101, 85466, 85832, 86197, 86562, 86927, 87293,
87658, 88023, 88388, 88754, 89119, 89484, 89849, 90215, 90580, 90945, 91310, 91676, 92041, 92406, 92771, 93137,
93502, 93867, 94232, 94598, 94963, 95328, 95693, 96059, 96424, 96789, 97154, 97520, 97885, 98250, 98615, 98981,
99346, 99711, 100076, 100442, 100807, 101172, 101537, 101903, 102268, 102633, 102998, 103364, 103729, 104094, 104459, 104825,
105190, 105555, 105920, 106286, 106651, 107016, 107381, 107747, 108112, 108477, 108842, 109208, 109573, 109938, 110303, 110669,
111034, 111399, 111764, 112130, 112495, 112860, 113225, 113591, 113956, 114321, 114686, 115052, 115417, 115782, 116147, 116513,
116878, 117243, 117608, 117974, 118339, 118704, 119069, 119435, 119800, 120165, 120530, 120895, 121260, 121625, 121990, 122356,
122721, 123086, 123451, 123817, 124182, 124547, 124912, 125278, 125643, 126008, 126373, 126739, 127104, 127469, 127834, 128200,
128565, 128930, 129295, 129661, 130026, 130391, 130756, 131122, 131487, 131852, 132217, 132583, 132948, 133313, 133678, 134044,
134409, 134774, 135139, 135505, 135870, 136235, 136600, 136966, 137331, 137696, 138061, 138427, 138792, 139157, 139522, 139888,
140253, 140618, 140983, 141349, 141714, 142079, 142444, 142810, 143175, 143540, 143905, 144271, 144636, 145001, 145366, 145732,
146097, 146462, 146827, 147193, 147558, 147923, 148288, 148654, 149019, 149384, 149749, 150115, 150480, 150845, 151210, 151576,
151941, 152306, 152671, 153037, 153402, 153767, 154132, 154498, 154863, 155228, 155593, 155959, 156324, 156689, 157054, 157420,
157785, 158150, 158515, 158881, 159246, 159611, 159976, 160342, 160707, 161072, 161437, 161803, 162168, 162533, 162898, 163264,
163629, 163994, 164359, 164725, 165090, 165455, 165820, 166186, 166551, 166916, 167281, 167647, 168012, 168377, 168742, 169108,
169473, 169838, 170203, 170569, 170934, 171299, 171664, 172030, 172395, 172760, 173125, 173491, 173856, 174221, 174586, 174952,
175317, 175682, 176047, 176413, 176778, 177143, 177508, 177874, 178239, 178604, 178969, 179335, 179700, 180065, 180430, 180796,
181161, 181526, 181891, 182257, 182622, 182987, 183352, 183718, 184083, 184448, 184813, 185179, 185544, 185909, 186274, 186640,
187005, 187370, 187735, 188101, 188466, 188831, 189196, 189562, 189927, 190292, 190657, 191023, 191388, 191753, 192118, 192484,
192849, 193214, 193579, 193944, 194309, 194674, 195039, 195405, 195770, 196135, 196500, 196866, 197231, 197596, 197961, 198327,
198692, 199057, 199422, 199788, 200153, 200518, 200883, 201249, 201614, 201979, 202344, 202710, 203075, 203440, 203805, 204171,
204536, 204901, 205266, 205632, 205997, 206362, 206727, 207093, 207458, 207823, 208188, 208554, 208919, 209284, 209649, 210015,
210380, 210745, 211110, 211476, 211841, 212206, 212571, 212937, 213302, 213667, 214032, 214398, 214763, 215128, 215493, 215859,
216224, 216589, 216954, 217320, 217685, 218050, 218415, 218781, 219146, 219511, 219876, 220242, 220607, 220972, 221337, 221703,
222068, 222433, 222798, 223164, 223529, 223894, 224259, 224625, 224990, 225355, 225720, 226086, 226451, 226816, 227181, 227547,
227912, 228277, 228642, 229008, 229373, 229738, 230103, 230468, 230833, 231198, 231563, 231929, 232294, 232659, 233024, 233390,
233755, 234120, 234485, 234851, 235216, 235581, 235946, 236312, 236677, 237042, 237407, 237773, 238138, 238503, 238868, 239234,
239599, 239964, 240329, 240695, 241060, 241425, 241790, 242156, 242521, 242886, 243251, 243617, 243982, 244347, 244712, 245078,
245443, 245808, 246173, 246539, 246904, 247269, 247634, 248000, 248365, 248730, 249095, 249461, 249826, 250191, 250556, 250922,
251287, 251652, 252017, 252383, 252748, 253113, 253478, 253844, 254209, 254574, 254939, 255305, 255670, 256035, 256400, 256766,
257131, 257496, 257861, 258227, 258592, 258957, 259322, 259688, 260053, 260418, 260783, 261149, 261514, 261879, 262244, 262610,
262975, 263340, 263705, 264071, 264436, 264801, 265166, 265532, 265897, 266262, 266627, 266992, 267357, 267722, 268087, 268453,
268818, 269183, 269548, 269914, 270279, 270644, 271009, 271375, 271740, 272105, 272470, 272836, 273201, 273566, 273931, 274297,
274662, 275027, 275392, 275758, 276123, 276488, 276853, 277219, 277584, 277949, 278314, 278680, 279045, 279410, 279775, 280141,
280506, 280871, 281236, 281602, 281967, 282332, 282697, 283063, 283428, 283793, 284158, 284524, 284889, 285254, 285619, 285985,
286350, 286715, 287080, 287446, 287811, 288176, 288541, 288907, 289272, 289637, 290002, 290368, 290733, 291098, 291463, 291829,
292194, 292559, 292924, 293290, 293655, 294020, 294385, 294751, 295116, 295481, 295846, 296212, 296577, 296942, 297307, 297673,
298038, 298403, 298768, 299134, 299499, 299864, 300229, 300595, 300960, 301325, 301690, 302056, 302421, 302786, 303151, 303517,
303882, 304247, 304612, 304978, 305343, 305708, 306073, 306439, 306804, 307169, 307534, 307900, 308265, 308630, 308995, 309361,
309726, 310091, 310456, 310822, 311187, 311552, 311917, 312283, 312648, 313013, 313378, 313744, 314109, 314474, 314839, 315205,
315570, 315935, 316300, 316666, 317031, 317396, 317761, 318127, 318492, 318857, 319222, 319588, 319953, 320318, 320683, 321049,
321414, 321779, 322144, 322510, 322875, 323240, 323605, 323971, 324336, 324701, 325066, 325432, 325797, 326162, 326527, 326893,
327258, 327623, 327988, 328354, 328719, 329084, 329449, 329815, 330180, 330545, 330910, 331276, 331641, 332006, 332371, 332737,
333102, 333467, 333832, 334198, 334563, 334928, 335293, 335659, 336024, 336389, 336754, 337120, 337485, 337850, 338215, 338581,
338946, 339311, 339676, 340041, 340406, 340771, 341136, 341502, 341867, 342232, 342597, 342963, 343328, 343693, 344058, 344424,
344789, 345154, 345519, 345885, 346250, 346615, 346980, 347346, 347711, 348076, 348441, 348807, 349172, 349537, 349902, 350268,
350633, 350998, 351363, 351729, 352094, 352459, 352824, 353190, 353555, 353920, 354285, 354651, 355016, 355381, 355746, 356112,
356477, 356842, 357207, 357573, 357938, 358303, 358668, 359034, 359399, 359764, 360129, 360495, 360860, 361225, 361590, 361956,
362321, 362686, 363051, 363417, 363782, 364147, 364512, 364878, 365243, 365608, 365973, 366339, 366704, 367069, 367434, 367800,
368165, 368530, 368895, 369261, 369626, 369991, 370356, 370722, 371087, 371452, 371817, 372183, 372548, 372913, 373278, 373644
};

const memory<uint1, 1024> is_leap_year_table =
{
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0
};

inline optional<epoch_days_t> utc_days_to_epoch(time_day_t time)
{
    // Compute indices into lookup tables
    const auto yearTableIndex = time.year - year_tables_start_year;
    const uint1 isLeapYear = is_leap_year_table[yearTableIndex];
    const auto monthTableIndex = time.month + (isLeapYear * 16);

    optional<epoch_days_t> result;

    // Validation
    bool[3] validComponents;

    validComponents[0] = ((time.year >= year_tables_start_year) && (time.year < year_tables_end_year));
    validComponents[1] = time.month < 12;
    validComponents[2] = time.day < days_per_month_table[monthTableIndex];

    const bool valid = and(validComponents);

    // Compute the number of days since Jan 1 1970
    // Each element of this array is in days
    epoch_days_t[3] dayComponents;

    dayComponents[0] = cummulative_year_days_table[yearTableIndex];
    dayComponents[1] = cummulative_month_days_table[monthTableIndex];
    dayComponents[2] = time.day;

    epoch_days_t totalDays = sum<epoch_days_t, epoch_days_t, 3>(dayComponents);

    return make_optional<epoch_days_t>(valid, valid ? totalDays : 0);
}

template<auto I, auto F>
inline optional<fixed<I, F>> ceil(fixed<I, F> x)
{
    auto value = x.value;
    optional<fixed<I, F>> result;
    int<I> integ = value >> F;
    uint<F> frac = value;

    result.value.value = cast<decltype(result.value.value)>((frac == 0 ? integ : integ + 1) << F); // error checking below
    result.is_valid = (value < 0) || (result.value.value >= 0);
    return result;
}
inline void AssertAlignment(uint64 addr, transaction_size_t size)
    {
        sim_assert(0 == (addr % 64));
        sim_assert(0 == (size % 64));
    }    // Check that is_last is set for last flit and not set for other flits.inline void AssertIsLast(transaction_size_t size, bool is_last) {
    // A single atomic is used to reduce impact on pipeline stages
    atomic {
        // Get whether this is the first flit in a transaction
        static bool _is_first = true;
        bool is_first = _is_first; 
        _is_first = is_last;
        // Get size after this flit
        static transaction_size_t _remaining_size;
        if (is_first) {
            _remaining_size = size;
        }
        _remaining_size -= 64;
        // is_last should only be set on last flit
        if (_remaining_size == 0) {
            sim_assert(is_last);
        }
       else {
            sim_assert(!is_last);
        }
    }
}
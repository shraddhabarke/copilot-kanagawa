import numeric.decimal.internal

const auto _width = 64;
const auto _bias = 398;
const auto _max_integer = 9999999999999999;

using bid64_t = uint<_width>;
using decimal64PackedFormat_t = decimalPackedFormat<_width>;

enum decimal64_constants: uint64
{
    POS_MAX       = 0x77FB86F26FC0FFFF,
    NEG_MAX       = 0xF7FB86F26FC0FFFF,
    POS_ZERO      = 0x31C0000000000000,
    NEG_ZERO      = 0xB1C0000000000000,
    POS_ONE       = 0x31C0000000000001,
    NEG_ONE       = 0xB1C0000000000001,
    POS_INFINITY  = 0x7800000000000000,
    NEG_INFINITY  = 0xF800000000000000,
    DEFAULT_NAN   = 0x7C00000000000000
}

inline optional<bid64_t> dim_exactly(bid64_t x, bid64_t y)
{
    return dim_exactly_internal<_width, _max_integer,
                                decimal64_constants::POS_ZERO,
                                decimal64_constants::DEFAULT_NAN,
                                decimal64_constants::POS_INFINITY,
                                decimal64_constants::NEG_INFINITY>(x, y);
}

import data.function
import data.optional as Opt
import data.order    as Ord
import data.tuple    as P
import numeric.int.operator
import type.coerce
import type.stdtype

// #### __Examples__
//
//     >>> first_valid<uint8>({{false, 0xAB}, {false, 0x22}});
//     {false, 0x22}
//
//     >>>  first_valid<uint8>({{true, 0xCD}, {true, 0xFF}});
//     {true, 0xCD}

template <typename T, auto N> 
inline optional<T> first_valid(optional<T>[N] x) { 
    return reduce(selecting(on1st(Opt::is_valid<T>)), x); }
